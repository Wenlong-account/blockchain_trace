<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.huse.trace.web.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="cn.huse.trace.web.pojo.User">
    <id column="account" jdbcType="VARCHAR" property="account" />
    <result column="passwd" jdbcType="VARCHAR" property="passwd" />
    <result column="CREATED_TIME" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="header_src" jdbcType="VARCHAR" property="headerSrc" />
    <result column="data" jdbcType="VARCHAR" property="data" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    account, passwd, CREATED_TIME, name, header_src, data
  </sql>
  <select id="selectByExample" parameterType="cn.huse.trace.web.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where account = #{account,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where account = #{account,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.huse.trace.web.pojo.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.huse.trace.web.pojo.User">
    insert into user (account, passwd, CREATED_TIME, 
      name, header_src, data
      )
    values (#{account,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{name,jdbcType=VARCHAR}, #{headerSrc,jdbcType=VARCHAR}, #{data,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.huse.trace.web.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="account != null">
        account,
      </if>
      <if test="passwd != null">
        passwd,
      </if>
      <if test="createdTime != null">
        CREATED_TIME,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="headerSrc != null">
        header_src,
      </if>
      <if test="data != null">
        data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="headerSrc != null">
        #{headerSrc,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        #{data,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.huse.trace.web.pojo.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.passwd != null">
        passwd = #{record.passwd,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.headerSrc != null">
        header_src = #{record.headerSrc,jdbcType=VARCHAR},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set account = #{record.account,jdbcType=VARCHAR},
      passwd = #{record.passwd,jdbcType=VARCHAR},
      CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      name = #{record.name,jdbcType=VARCHAR},
      header_src = #{record.headerSrc,jdbcType=VARCHAR},
      data = #{record.data,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.huse.trace.web.pojo.User">
    update user
    <set>
      <if test="passwd != null">
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="headerSrc != null">
        header_src = #{headerSrc,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=VARCHAR},
      </if>
    </set>
    where account = #{account,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.huse.trace.web.pojo.User">
    update user
    set passwd = #{passwd,jdbcType=VARCHAR},
      CREATED_TIME = #{createdTime,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      header_src = #{headerSrc,jdbcType=VARCHAR},
      data = #{data,jdbcType=VARCHAR}
    where account = #{account,jdbcType=VARCHAR}
  </update>
</mapper>